---
layout: post
title:  "Become an Open-source Contributor Video Conference"
date:   2014-07-16 10:06:52
categories: non-tech
---

A couple weeks ago I was contacted by Yehuda Korotkin through one of the Debian mailing lists. Yehuda is a tech professor at one of Israel's leading colleges for women. He proposed a video conference to present the open source community to his class and explain how they can contribute to open source projects. I volunteered to participate and last Monday (July 14th 2014) we had our virtual meeting, which I hope was the first of many. 

Shauna G. also participated from Boston, making it a Israel - USA - Brazil meetup. Pretty impressive, eh? The conference was hosted on Google Hangouts, the video is available for viewing [here](https://plus.google.com/u/0/events/csd9aj935ungd3qjsl6kaf0d2tg). Run time is around 2.5 hours so to save you time I've kindly posted a summary of the conference! To be frank, I look ghastly half the time so I'd much prefer that you read this post.

First there was a Q&A period which was more of a discussion panel, followed by a hands-on session where the girls made their first contribution to an open source project. Here's the gist of it:

**Q&A**

* **What is open source [software]?** Software that allows free access to its source code (ergo 'open'), permitting analysis and any modifications to the original code. All these permissions are contained in a license included in the software. Note that the term 'open source' is now applied to a lot of things other than software, and I assume there's a different definition for those cases.

* **Who is the community behind open source software?** Shauna pointed out that there are many kinds of projects and many kinds of communities backing them. As an example of a for-profit model, Shauna cited RedHat that offers Linux (an open source OS) for free and profits from support services. Some projects are supported by NGO's (example: Center for Open Science) with a specific objective, a series of other projects are volunteer-based or are the result of a hobby project. The contributors vary accordingly, they are not only programmers but also people with a non-technical background. In sum, there's a lot of variety in the open source community as a whole, details of sturcture vary case to case. 

* **Why is it important that women get involved in technology?** Men and women are different because of a series of reasons, among them our biological composition, influences of society and life experiences. Technology is for everyone, male or female and we need to be able to design products that will suit everyone well. If the development team is comprised of only one sex or another, it's likely that factors will be overlooked or ignored and as a result not a democratic experience. Shauna gave some examples of this, such as a voice-powered location search software that could easily identify stereotypically 'male' keywords but not many of interest to females.

	In addition to this, it's known that there is a severe workforce deficiency in the tech industry. One proposed solution is to encourage more women to follow a career in tech. The argument is based on the assumption that any boy who is remotely interested in tech has a high likelihood of studying tech, but not every girl. Often girls are not encouraged to stuy STEM-related topics and in many places tech is considered inappropriate for women. I've [read](http://qz.com/143967/the-tech-industrys-woman-problem-statistics-show-its-worse-than-you-think/) that tech companies' engineering team is 12% female and 88% male. That number is consistent with the stats of female college grads for STEM majors. I think boys who love tech will keep getting into tech, but there are a lot of girls who could be great engineers if they only gave it a shot. Women should be encouraged to pursue a tech career not only so they'll get to work in such an incredible field but also so they can help assuage the gap in supply and demand present in the tech workforce today.

* **Why is open source important?** We don't always get everything we want/need from off-the-shelf software. The great thing about open source is that you are free to tweak the at will and add whatever features you'd like. Sometimes there are even more important necessities, such as security requirements. With open source you don't need to just take the manufacturers' word that the code is bullet proof; open it and check it out yourself. Another factor that increases the value of open source is its stability. As Linus Torvalds said, "given enough eyeballs, all bugs are shallow". With so many developers opening, studying and testing the code, bugs are quickly identified and removed. The fact that open source software is 'free' doesn't reflect negatively on the quality; to the contrary, plenty of open source software is the best that's out there.

* **Why its important contribute to open source?** To start, it's not written anywhere that you *have* to contribute. That said, it sure is *nice* if you do. I think there are two main reasons why people contribute. One is they want to 'give back' to the open source community. The other is they want to add some missing detail, feature or entire product. Of course, usually if you need something, someone else does as well, then by supplying your own need you end up helping many people out on the way. But one thing that I think applies especially to students is it's a great way to gain experience. You have to fit in some practical learning along with all that theory and one can only be so enthusiastic about the CS projects done in school that are usually discarded at the end of the semester. By contributing to an open source project, you are doing something that's *real* and that people will *actually use*. You also have access to an incredible network of mentors who are real pros and more than willing to help you out. Maybe I've just been lucky, but they are really nice people who won't snicker if you ask a stupid question. Well, maybe they do. But I haven't seen it happen and I'm the queen of stupid questions. Many times this is their pet project, so they're thrilled to have your contribution. Another great thing is that you can choose what you want to work with. It's easy to find a tech internship out there, what's not easy is finding an interesting internship. You might work with something you dislike or (gasp) end up just bringing people coffee. But we do that stuff cause we need the work experience. With open source you have a huge array of projects you can work on, one of them is certain to suit your interests.

* **How to become a contributor?** When using an open source software, you might notice things you'd like to change, or actual bugs. Let the development team know about it and be sure to also let them know if you think you can figure out the fix. And if that hasn't happened yet, try exploring Github's open source repositories and check out the 'Issues' option (upper right corner). There's usually a list of bugs or wishlist features that you just might be the man/woman for. 

**Hands on**

For the practical part of our conference, Yehuda's students contributed to [Jscommunicator's](https://github.com/opentelecoms-org/jscommunicator) Issue [#5](https://github.com/opentelecoms-org/jscommunicator/issues/5) which requests i18n support for major languages. JSCommunicator is a SIP communication tool developed in HTML and JavaScript, currently supporting audio/video calls and SIP SIMPLE instant messaging.

First we set up Github in their local machines and forked the Jscommunicator repo. We learned the basic git commands needed to push changes to their remote repositories and to create a pull requests. This is explained in further detail [here]({% post_url 2014-07-17-contribute-a-jscommunicator-translation %}).

At the end of the conference with nearly an hour overtime due to my tendency to be overly verbose, Yehuda's class made their first contribution with a [Hebrew translation for Jscommunicator](https://github.com/opentelecoms-org/jscommunicator/pull/32)! 

All in all, it was great to virtually meet Yehuda and his epic students who all seemed very clever engineers. I'm looking forward to our next meetup once I gain some time-management skills. 